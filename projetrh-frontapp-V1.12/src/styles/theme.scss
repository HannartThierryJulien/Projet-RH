/**
  tuto dark/light mode : https://stackblitz.com/edit/angular-15-theme-toggle-uc2jsh?file=src%2Fapp%2Fapp.component.html,src%2Fstyles.scss,src%2Fapp%2Fapp.component.ts
 */

@use '../../node_modules/@angular/material/index' as mat;
@include mat.core();

$custom-green-palette: (
  50: #eff5ec,
  100: #d6e7cf,
  200: #bbd7b0,
  300: #9fc790,
  400: #8bbb78,
  500: #76af60,
  600: #6ea858,
  700: #639f4e,
  800: #599644,
  900: #468633,
  A100: #dbffd1,
  A200: #b3ff9e,
  A400: #8bff6b,
  A700: #77ff52,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);



// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette($custom-green-palette, 500);
$my-warn: mat.define-palette(mat.$red-palette); // The warn palette is optional (defaults to red).


// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$my-theme: mat.define-light-theme((
  color: (
    primary: $my-primary,
    accent: $my-accent,
    warn: $my-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0,
));


$my-theme-dark: mat.define-dark-theme((
  color: (
    primary: $my-primary,
    accent: $my-accent,
    warn: $my-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0,
));


// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($my-theme);


// Apply the light theme when the document element attribute is changed to 'dark'
:root[theme='dark'] {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.all-component-themes($my-theme-dark);
}

/* You can add global styles to this file, and also import other style files */
